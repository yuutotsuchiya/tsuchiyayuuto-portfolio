{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nvar _hoisted_1 = {\n  class: \"home\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_About = _resolveComponent(\"About\");\n\n  var _component_ContentsItem = _resolveComponent(\"ContentsItem\");\n\n  var _component_EntryThumbnail = _resolveComponent(\"EntryThumbnail\");\n\n  return _openBlock(), _createBlock(\"div\", _hoisted_1, [_createVNode(_component_About), _createVNode(_component_ContentsItem, {\n    title: \"Web Works\"\n  }), _createVNode(_component_EntryThumbnail, {\n    entries: $setup.entries\n  }, null, 8, [\"entries\"])]);\n}","map":{"version":3,"sources":["/Users/tsuchiyayuuto/Desktop/github/site-start-vue/blog/src/views/Home.vue"],"names":[],"mappings":";;;;AACO,EAAA,KAAK,EAAC;;;;;;;;;uBAAX,YAAA,CAMM,KANN,EAAA,UAAA,EAMM,CALJ,YAAA,CAAS,gBAAT,CAKI,EAJJ,YAAA,CAAkC,uBAAlC,EAAkC;AAApB,IAAA,KAAK,EAAC;AAAc,GAAlC,CAII,EAHJ,YAAA,CAEE,yBAFF,EAEE;AADC,IAAA,OAAO,EAAE,MAAA,CAAA;AACV,GAFF,EACmB,IADnB,EACmB,CADnB,EACmB,CAAA,SAAA,CADnB,CAGI,CANN,C","sourcesContent":["<template>\n  <div class=\"home\">\n    <About />\n    <ContentsItem title=\"Web Works\" />\n    <EntryThumbnail\n      :entries=\"entries\"\n    />\n  </div>\n</template>\n<script>\n// @ is an alias to /src\nimport { onMounted, computed } from 'vue'\nimport { useStore } from 'vuex'\nimport About from '@/components/About.vue'\nimport ContentsItem from '@/components/ContentsItem.vue'\nimport EntryThumbnail from '@/components/EntryThumbnail.vue'\nexport default {\n  name: 'Home',\n  components: {\n    About,\n    EntryThumbnail,\n    ContentsItem,\n  },\n  setup() {\n    const store = useStore();\n    const getEntries = () => store.dispatch('getEntries')\n    onMounted(() => {\n      getEntries()\n    })\n    return {\n      entries: computed(() => store.state.entries),\n    }\n  }\n}\n</script>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}